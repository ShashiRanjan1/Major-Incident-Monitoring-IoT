<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="DELETE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_60748_monitoring.SignatureGenerator</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>test</description>
        <mobile_callable>false</mobile_callable>
        <name>SignatureGenerator</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[var SignatureGenerator = Class.create();
SignatureGenerator.prototype = {
    initialize: function () {
        this.crypto = new global.GlobalCryptoWrapper(); // Using global wrapper
    },

    generateSignature: function (clientId, secret, method, requestBody, headers, queryParams, urlPath, accessToken, nonce) {
        var timestamp = new Date().getTime().toString();
        var bodyStr = requestBody ? JSON.stringify(requestBody) : "";
        var bodyHash = this._sha256(bodyStr);

        var signMap = this._stringToSign(queryParams, requestBody, method, headers, urlPath, bodyHash);
        var signUrl = signMap.signUrl;
        var finalUrl = signMap.url;

        var rawString = clientId + timestamp + nonce + signUrl;
        var sign = this.crypto.generateHmac(rawString, secret);

        return {
            timestamp: timestamp,
            sign: sign,
            url: finalUrl
        };
    },

    _stringToSign: function (queryParams, body, method, headers, path, bodyHash) {
        var arr = [];
        var map = {};
        var url = "";
        var headersStr = "";

        if (queryParams) {
            this._toJsonObj(queryParams, arr, map);
        }

        if (body) {
            this._toJsonObj(body, arr, map);
        }

        arr.sort();
        arr.forEach(function (key) {
            url += key + "=" + map[key] + "&";
        });

        if (url.length > 0) {
            url = "/" + path + "?" + url.slice(0, -1);
        } else {
            url = "/" + path;
        }

        if (headers["Signature-Headers"]) {
            var keys = headers["Signature-Headers"].split(":");
            keys.forEach(function (key) {
                if (headers[key]) {
                    headersStr += key + ":" + headers[key] + "\n";
                }
            });
        }

        return {
            signUrl: method + "\n" + bodyHash + "\n" + headersStr + "\n" + url,
            url: url
        };
    },

    _toJsonObj: function (params, arr, map) {
        params.forEach(function (item) {
            if (!item.disabled) {
                arr.push(item.key);
                map[item.key] = item.value;
            }
        });
    },

    _sha256: function (input) {
        return this.crypto.generateSha256(input);
    },

    type: 'SignatureGenerator'
};
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-06-07 12:57:16</sys_created_on>
        <sys_id>85c52728830ae2105a13e530ceaad32b</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>SignatureGenerator</sys_name>
        <sys_package display_value="Monitoring" source="x_60748_monitoring">2a556b64830ae2105a13e530ceaad3a3</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Monitoring">2a556b64830ae2105a13e530ceaad3a3</sys_scope>
        <sys_update_name>sys_script_include_85c52728830ae2105a13e530ceaad32b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-06-07 13:19:12</sys_updated_on>
    </sys_script_include>
    <sys_es_latest_script action="DELETE">
        <id>85c52728830ae2105a13e530ceaad32b</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-06-07 12:57:15</sys_created_on>
        <sys_id>79f56bec83c6e2105a13e530ceaad32e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-06-07 12:57:15</sys_updated_on>
        <table>sys_script_include</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="Monitoring">2a556b64830ae2105a13e530ceaad3a3</application>
        <file_path/>
        <instance_id>475e258d3bb34290c55a348aa4e45a34</instance_id>
        <instance_name>dev284896</instance_name>
        <name>sys_script_include_85c52728830ae2105a13e530ceaad32b</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;x_60748_monitoring.SignatureGenerator&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description&gt;test&lt;/description&gt;&lt;mobile_callable&gt;false&lt;/mobile_callable&gt;&lt;name&gt;SignatureGenerator&lt;/name&gt;&lt;sandbox_callable&gt;false&lt;/sandbox_callable&gt;&lt;script&gt;&lt;![CDATA[var SignatureGenerator = Class.create();
SignatureGenerator.prototype = {
    initialize: function () {
        this.crypto = new global.GlobalCryptoWrapper(); // Using global wrapper
    },

    generateSignature: function (clientId, secret, method, requestBody, headers, queryParams, urlPath, accessToken, nonce) {
        var timestamp = new Date().getTime().toString();
        var bodyStr = requestBody ? JSON.stringify(requestBody) : "";
        var bodyHash = this._sha256(bodyStr);

        var signMap = this._stringToSign(queryParams, requestBody, method, headers, urlPath, bodyHash);
        var signUrl = signMap.signUrl;
        var finalUrl = signMap.url;

        var rawString = clientId + timestamp + nonce + signUrl;
        var sign = this.crypto.generateHmac(rawString, secret);

        return {
            timestamp: timestamp,
            sign: sign,
            url: finalUrl
        };
    },

    _stringToSign: function (queryParams, body, method, headers, path, bodyHash) {
        var arr = [];
        var map = {};
        var url = "";
        var headersStr = "";

        if (queryParams) {
            this._toJsonObj(queryParams, arr, map);
        }

        if (body) {
            this._toJsonObj(body, arr, map);
        }

        arr.sort();
        arr.forEach(function (key) {
            url += key + "=" + map[key] + "&amp;";
        });

        if (url.length &gt; 0) {
            url = "/" + path + "?" + url.slice(0, -1);
        } else {
            url = "/" + path;
        }

        if (headers["Signature-Headers"]) {
            var keys = headers["Signature-Headers"].split(":");
            keys.forEach(function (key) {
                if (headers[key]) {
                    headersStr += key + ":" + headers[key] + "\n";
                }
            });
        }

        return {
            signUrl: method + "\n" + bodyHash + "\n" + headersStr + "\n" + url,
            url: url
        };
    },

    _toJsonObj: function (params, arr, map) {
        params.forEach(function (item) {
            if (!item.disabled) {
                arr.push(item.key);
                map[item.key] = item.value;
            }
        });
    },

    _sha256: function (input) {
        return this.crypto.generateSha256(input);
    },

    type: 'SignatureGenerator'
};
]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2025-06-07 12:57:16&lt;/sys_created_on&gt;&lt;sys_id&gt;85c52728830ae2105a13e530ceaad32b&lt;/sys_id&gt;&lt;sys_mod_count&gt;4&lt;/sys_mod_count&gt;&lt;sys_name&gt;SignatureGenerator&lt;/sys_name&gt;&lt;sys_package display_value="Monitoring" source="x_60748_monitoring"&gt;2a556b64830ae2105a13e530ceaad3a3&lt;/sys_package&gt;&lt;sys_policy&gt;read&lt;/sys_policy&gt;&lt;sys_scope display_value="Monitoring"&gt;2a556b64830ae2105a13e530ceaad3a3&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_85c52728830ae2105a13e530ceaad32b&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2025-06-07 13:19:12&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;sys_es_latest_script action="INSERT_OR_UPDATE"&gt;&lt;id&gt;85c52728830ae2105a13e530ceaad32b&lt;/id&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2025-06-07 12:57:15&lt;/sys_created_on&gt;&lt;sys_id&gt;79f56bec83c6e2105a13e530ceaad32e&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2025-06-07 12:57:15&lt;/sys_updated_on&gt;&lt;table&gt;sys_script_include&lt;/table&gt;&lt;use_es_latest&gt;true&lt;/use_es_latest&gt;&lt;/sys_es_latest_script&gt;&lt;/record_update&gt;</payload>
        <payload_hash>1285032594</payload_hash>
        <record_name>SignatureGenerator</record_name>
        <reverted_from/>
        <source>6255abe4830ae2105a13e530ceaad380</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-06-07 13:19:12</sys_created_on>
        <sys_id>87fa2be0834ae2105a13e530ceaad3de</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>1974a8b99870000001</sys_recorded_at>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-06-07 13:19:12</sys_updated_on>
        <type>Script Include</type>
        <update_guid>4ffa2be0624ae210fcb2b143bcba60dd</update_guid>
        <update_guid_history>4ffa2be0624ae210fcb2b143bcba60dd:1285032594,68baa3a07c4ae2102e12bc1bc6453bb1:1608539225,7c4a6760874ae210f71716407ce01812:-446502791,67572ba8730ae210ac855a73344fe943:-182266467,b1f5a3e4ed0ae21069a29b347dbc6be7:1079508268</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-06-07 14:23:04</sys_created_on>
        <sys_db_object display_value="" name="sys_script_include">sys_script_include</sys_db_object>
        <sys_id>65b64f7432e440309843f5f3535dc910</sys_id>
        <sys_metadata>85c52728830ae2105a13e530ceaad32b</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SignatureGenerator</sys_name>
        <sys_package display_value="Monitoring" source="x_60748_monitoring">2a556b64830ae2105a13e530ceaad3a3</sys_package>
        <sys_parent/>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Monitoring">2a556b64830ae2105a13e530ceaad3a3</sys_scope>
        <sys_scope_delete display_value="">b32b355125ec4107bc995236935103a1</sys_scope_delete>
        <sys_update_name>sys_script_include_85c52728830ae2105a13e530ceaad32b</sys_update_name>
        <sys_update_version display_value="sys_script_include_85c52728830ae2105a13e530ceaad32b">87fa2be0834ae2105a13e530ceaad3de</sys_update_version>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-06-07 14:23:04</sys_updated_on>
    </sys_metadata_delete>
</record_update>
