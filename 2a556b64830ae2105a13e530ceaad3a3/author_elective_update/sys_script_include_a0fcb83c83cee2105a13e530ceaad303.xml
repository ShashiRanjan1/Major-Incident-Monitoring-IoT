<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="DELETE">
        <access>public</access>
        <active>true</active>
        <api_name>x_60748_monitoring.SignatureUtil</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <mobile_callable>false</mobile_callable>
        <name>SignatureUtil</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[var SignatureUtil = Class.create();
SignatureUtil.prototype = {
    initialize: function() {
        this.pureCryptoUtil = new x_60748_monitoring.PureCryptoUtil(); // Update namespace if different
    },

    generateBusinessSignature: function(params) {
        var clientId = params.clientId;
        var secret = params.secret;
        var accessToken = params.accessToken;
        var timestamp = params.timestamp || new Date().getTime().toString();
        var nonce = params.nonce || ''; // Optional
        var method = params.method.toUpperCase();
        var pathWithQuery = params.pathWithQuery; // e.g. /api/xyz?sort=asc
        var body = params.body || ''; // JSON string
        var signatureHeaders = params.signatureHeaders || {}; // Object: { "X-Custom": "value", ... }

        // 1. Create SHA256 hash of body
        var hashedBody = this.pureCryptoUtil.sha256(body);

        // 2. Build header string (e.g., Signature-Headers: X-Custom:X-Token)
        var headerStr = '';
        var headerKeys = Object.keys(signatureHeaders).sort();
        headerKeys.forEach(function(key) {
            headerStr += key + ':' + signatureHeaders[key] + '\n';
        });

        // 3. Build the string to sign
        var stringToSign = method + "\n" + hashedBody + "\n" + headerStr + "\n" + pathWithQuery;

        // 4. Combine all parts for signature
        var toSign = clientId + accessToken + timestamp + nonce + stringToSign;

        // 5. Generate HMAC-SHA256
        var signature = this.pureCryptoUtil.hmacSha256(secret, toSign).toUpperCase();

        return {
            signature: signature,
            timestamp: timestamp,
            signString: toSign
        };
    },

    type: 'SignatureUtil'
};
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-06-07 19:17:54</sys_created_on>
        <sys_id>a0fcb83c83cee2105a13e530ceaad303</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SignatureUtil</sys_name>
        <sys_package display_value="Monitoring" source="x_60748_monitoring">2a556b64830ae2105a13e530ceaad3a3</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Monitoring">2a556b64830ae2105a13e530ceaad3a3</sys_scope>
        <sys_update_name>sys_script_include_a0fcb83c83cee2105a13e530ceaad303</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-06-07 19:17:54</sys_updated_on>
    </sys_script_include>
    <sys_es_latest_script action="DELETE">
        <id>a0fcb83c83cee2105a13e530ceaad303</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-06-07 19:17:54</sys_created_on>
        <sys_id>2d1d787883cee2105a13e530ceaad375</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-06-07 19:17:54</sys_updated_on>
        <table>sys_script_include</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="Monitoring">2a556b64830ae2105a13e530ceaad3a3</application>
        <file_path/>
        <instance_id>475e258d3bb34290c55a348aa4e45a34</instance_id>
        <instance_name>dev284896</instance_name>
        <name>sys_script_include_a0fcb83c83cee2105a13e530ceaad303</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;public&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;x_60748_monitoring.SignatureUtil&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;mobile_callable&gt;false&lt;/mobile_callable&gt;&lt;name&gt;SignatureUtil&lt;/name&gt;&lt;sandbox_callable&gt;false&lt;/sandbox_callable&gt;&lt;script&gt;&lt;![CDATA[var SignatureUtil = Class.create();
SignatureUtil.prototype = {
    initialize: function() {
        this.pureCryptoUtil = new x_60748_monitoring.PureCryptoUtil(); // Update namespace if different
    },

    generateBusinessSignature: function(params) {
        var clientId = params.clientId;
        var secret = params.secret;
        var accessToken = params.accessToken;
        var timestamp = params.timestamp || new Date().getTime().toString();
        var nonce = params.nonce || ''; // Optional
        var method = params.method.toUpperCase();
        var pathWithQuery = params.pathWithQuery; // e.g. /api/xyz?sort=asc
        var body = params.body || ''; // JSON string
        var signatureHeaders = params.signatureHeaders || {}; // Object: { "X-Custom": "value", ... }

        // 1. Create SHA256 hash of body
        var hashedBody = this.pureCryptoUtil.sha256(body);

        // 2. Build header string (e.g., Signature-Headers: X-Custom:X-Token)
        var headerStr = '';
        var headerKeys = Object.keys(signatureHeaders).sort();
        headerKeys.forEach(function(key) {
            headerStr += key + ':' + signatureHeaders[key] + '\n';
        });

        // 3. Build the string to sign
        var stringToSign = method + "\n" + hashedBody + "\n" + headerStr + "\n" + pathWithQuery;

        // 4. Combine all parts for signature
        var toSign = clientId + accessToken + timestamp + nonce + stringToSign;

        // 5. Generate HMAC-SHA256
        var signature = this.pureCryptoUtil.hmacSha256(secret, toSign).toUpperCase();

        return {
            signature: signature,
            timestamp: timestamp,
            signString: toSign
        };
    },

    type: 'SignatureUtil'
};
]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2025-06-07 19:17:54&lt;/sys_created_on&gt;&lt;sys_id&gt;a0fcb83c83cee2105a13e530ceaad303&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;SignatureUtil&lt;/sys_name&gt;&lt;sys_package display_value="Monitoring" source="x_60748_monitoring"&gt;2a556b64830ae2105a13e530ceaad3a3&lt;/sys_package&gt;&lt;sys_policy&gt;read&lt;/sys_policy&gt;&lt;sys_scope display_value="Monitoring"&gt;2a556b64830ae2105a13e530ceaad3a3&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_a0fcb83c83cee2105a13e530ceaad303&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2025-06-07 19:17:54&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;sys_es_latest_script action="INSERT_OR_UPDATE"&gt;&lt;id&gt;a0fcb83c83cee2105a13e530ceaad303&lt;/id&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2025-06-07 19:17:54&lt;/sys_created_on&gt;&lt;sys_id&gt;2d1d787883cee2105a13e530ceaad375&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2025-06-07 19:17:54&lt;/sys_updated_on&gt;&lt;table&gt;sys_script_include&lt;/table&gt;&lt;use_es_latest&gt;true&lt;/use_es_latest&gt;&lt;/sys_es_latest_script&gt;&lt;/record_update&gt;</payload>
        <payload_hash>-1648452883</payload_hash>
        <record_name>SignatureUtil</record_name>
        <reverted_from/>
        <source>6255abe4830ae2105a13e530ceaad380</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-06-07 19:17:54</sys_created_on>
        <sys_id>e51df87883cee2105a13e530ceaad3bf</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>1974bd401e80000001</sys_recorded_at>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-06-07 19:17:54</sys_updated_on>
        <type>Script Include</type>
        <update_guid>e91df878b1cee21008fec99c8597debe</update_guid>
        <update_guid_history>e91df878b1cee21008fec99c8597debe:-1648452883</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-06-07 20:23:16</sys_created_on>
        <sys_db_object display_value="" name="sys_script_include">sys_script_include</sys_db_object>
        <sys_id>1218cd55396747d48bfdf665e8348e31</sys_id>
        <sys_metadata>a0fcb83c83cee2105a13e530ceaad303</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SignatureUtil</sys_name>
        <sys_package display_value="Monitoring" source="x_60748_monitoring">2a556b64830ae2105a13e530ceaad3a3</sys_package>
        <sys_parent/>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Monitoring">2a556b64830ae2105a13e530ceaad3a3</sys_scope>
        <sys_scope_delete display_value="">b32b355125ec4107bc995236935103a1</sys_scope_delete>
        <sys_update_name>sys_script_include_a0fcb83c83cee2105a13e530ceaad303</sys_update_name>
        <sys_update_version display_value="sys_script_include_a0fcb83c83cee2105a13e530ceaad303">e51df87883cee2105a13e530ceaad3bf</sys_update_version>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-06-07 20:23:16</sys_updated_on>
    </sys_metadata_delete>
</record_update>
